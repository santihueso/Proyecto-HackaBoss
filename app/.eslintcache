[{"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/index.js":"1","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/App.js":"2","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/reportWebVitals.js":"3","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/principalPage/Principal.js":"4","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/BookOfKindCategory/BookOfKindCategory.js":"5","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/ProfileOutSide.js":"6","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/bookSeeker/FindForSeeker.js":"7","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/Valorations.js":"8","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/ProfileInside.js":"9","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/ListBooksUser.js":"10","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/buttons/ViewBooksFor.js":"11","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/FormBook/FormBook.js":"12","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/FormBook/FormCreatebook.js":"13","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/signin-login/Signin.js":"14","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/signin-login/Login.js":"15","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/changePassword/changePassword.js":"16","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/useFetch/useFetchData.js":"17","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/useFetch/useFetchAuth.js":"18","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/buttons/Buttons.js":"19","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/buttons/FormValoration.js":"20","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/signin-login/UseForm.js":"21","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/categories/Categories.js":"22","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/headPrincipal/HeadPrincipal.js":"23","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/lastBooks/LastBooks.js":"24","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/principalPage/List-Avatar.js":"25","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/navPrincipal/NavPrincipal.js":"26","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/CreateProfile/CreateProfile.js":"27"},{"size":500,"mtime":1612819229171,"results":"28","hashOfConfig":"29"},{"size":194,"mtime":1612819229171,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1612819229171,"results":"31","hashOfConfig":"29"},{"size":4437,"mtime":1612819290171,"results":"32","hashOfConfig":"29"},{"size":2445,"mtime":1612824511999,"results":"33","hashOfConfig":"29"},{"size":1851,"mtime":1612819229171,"results":"34","hashOfConfig":"29"},{"size":1176,"mtime":1612819229171,"results":"35","hashOfConfig":"29"},{"size":1066,"mtime":1612819229171,"results":"36","hashOfConfig":"29"},{"size":1250,"mtime":1612819229171,"results":"37","hashOfConfig":"29"},{"size":792,"mtime":1612819229171,"results":"38","hashOfConfig":"29"},{"size":3804,"mtime":1612819229171,"results":"39","hashOfConfig":"29"},{"size":6842,"mtime":1612819229171,"results":"40","hashOfConfig":"29"},{"size":4644,"mtime":1612819229171,"results":"41","hashOfConfig":"29"},{"size":1348,"mtime":1612819229171,"results":"42","hashOfConfig":"29"},{"size":1399,"mtime":1612819229171,"results":"43","hashOfConfig":"29"},{"size":1115,"mtime":1612819229171,"results":"44","hashOfConfig":"29"},{"size":434,"mtime":1612819229171,"results":"45","hashOfConfig":"29"},{"size":557,"mtime":1612819229171,"results":"46","hashOfConfig":"29"},{"size":2269,"mtime":1612821749037,"results":"47","hashOfConfig":"29"},{"size":2600,"mtime":1612823938776,"results":"48","hashOfConfig":"29"},{"size":2541,"mtime":1612819229171,"results":"49","hashOfConfig":"29"},{"size":862,"mtime":1612819229171,"results":"50","hashOfConfig":"29"},{"size":1234,"mtime":1612821433475,"results":"51","hashOfConfig":"29"},{"size":911,"mtime":1612819229171,"results":"52","hashOfConfig":"29"},{"size":651,"mtime":1612819229171,"results":"53","hashOfConfig":"29"},{"size":401,"mtime":1612819229171,"results":"54","hashOfConfig":"29"},{"size":4298,"mtime":1612819229171,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"hqjd59",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/index.js",[],["118","119"],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/App.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/reportWebVitals.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/principalPage/Principal.js",["120"],"import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { HeadPrincipal } from \"../headPrincipal/HeadPrincipal\";\nimport { Categories } from \"../categories/Categories\";\nimport { BookOfKindCategory } from \"../BookOfKindCategory/BookOfKindCategory\";\nimport { LastBooks } from \"../lastBooks/LastBooks\";\nimport { FindForSeeker } from \"../bookSeeker/FindForSeeker\";\nimport { ProfileOutSide } from \"../profile/ProfileOutSide\";\nimport { ProfileUserInside } from \"../profile/ProfileInside\";\nimport { CreateProfile } from \"../CreateProfile/CreateProfile\";\nimport { SignIn } from \"../signin-login/Signin\";\nimport { Login } from \"../signin-login/Login\";\nimport { ListBooksUser } from \"../profile/ListBooksUser\";\nimport { NewPassword } from \"../changePassword/changePassword\";\nimport { NavPrincipal } from \"../navPrincipal/NavPrincipal\";\nimport {\n  ViewBooksForFavourites,\n  ViewBooksForPurchase,\n  ViewBooksForReserved,\n  ViewBooksForToSell,\n  ViewBooksForOffers,\n  ViewBooksForCategories,\n} from \"../buttons/ViewBooksFor\";\nimport { FormEditBook } from \"../FormBook/FormBook\";\nimport { FormCreateBook } from \"../FormBook/FormCreatebook\";\nimport { SoldBooks } from \"../profile/Valorations\";\nconst port = 8084;\n\nconst Principal = () => {\n  const [auth, setAuth] = useState(\n    JSON.parse(localStorage.getItem(\"auth\")) || \"\"\n  );\n\n  return (\n    <Router>\n      <h1>Recy-book</h1>\n      <Switch>\n        <Route path=\"/principal/category/:id/:name/book/:idBook/user/:idUser/valorations\">\n          <SoldBooks></SoldBooks>\n        </Route>\n\n        <Route path=\"/principal/category/:id/:name/book/:idBook/user/:idUser\">\n          <ProfileOutSide></ProfileOutSide>\n        </Route>\n\n        <Route path=\"/books/:seek/:data\">\n          <FindForSeeker></FindForSeeker>\n        </Route>\n\n        <Route path=\"/principal/category/:id/:name/book/:idBook\">\n          <ViewBooksForCategories auth={auth}></ViewBooksForCategories>\n        </Route>\n        <Route path=\"/principal/category/:id/:name\">\n          <BookOfKindCategory></BookOfKindCategory>\n        </Route>\n        <Route path=\"/principal/profile/list/toSell/book/:idBook/edit\">\n          <FormEditBook auth={auth}></FormEditBook>\n        </Route>\n        <Route path=\"/principal/profile/list/favorites/book/:idBook\">\n          <ViewBooksForFavourites auth={auth}></ViewBooksForFavourites>\n        </Route>\n        <Route path=\"/principal/profile/list/purchase/book/:idBook\">\n          <ViewBooksForPurchase auth={auth}></ViewBooksForPurchase>\n        </Route>\n        <Route path=\"/principal/profile/list/reserved/book/:idBook\">\n          <ViewBooksForReserved auth={auth}></ViewBooksForReserved>\n        </Route>\n        <Route path=\"/principal/profile/list/toSell/book/:idBook\">\n          <ViewBooksForToSell auth={auth}></ViewBooksForToSell>\n        </Route>\n        <Route path=\"/principal/profile/list/offers/book/:idBook\">\n          <ViewBooksForOffers auth={auth}></ViewBooksForOffers>\n        </Route>\n        <Route path=\"/principal/profile/list/:kind\">\n          <ListBooksUser auth={auth}></ListBooksUser>\n        </Route>\n        <Route path=\"/principal/profile/edit\">\n          <CreateProfile auth={auth}></CreateProfile>\n        </Route>\n        <Route path=\"/principal/profile\">\n          <ProfileUserInside auth={auth}></ProfileUserInside>\n        </Route>\n        <Route path=\"/principal/newBook\">\n          <FormCreateBook auth={auth}></FormCreateBook>\n        </Route>\n        <Route path=\"/principal\">\n          <HeadPrincipal></HeadPrincipal>\n          <NavPrincipal auth={auth}></NavPrincipal>\n          <Categories></Categories>\n          <LastBooks></LastBooks>\n        </Route>\n        <Route path=\"/signin\">\n          <SignIn></SignIn>\n        </Route>\n        <Route path=\"/login\">\n          <Login setAuth={setAuth}></Login>\n        </Route>\n        <Route path=\"/changePassword\">\n          <NewPassword></NewPassword>\n        </Route>\n        <Route path=\"/notFound\">\n          <p>No hay libros en esta categoría</p>\n        </Route>\n        <Route path=\"/yourBook\">\n          <p>El libro es tuyo</p>\n        </Route>\n        <Route path=\"/errorLogin\">\n          <p>Contraseña o email equivocado</p>\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/principal\"></Redirect>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport { Principal, port };\n","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/BookOfKindCategory/BookOfKindCategory.js",["121","122"],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/ProfileOutSide.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/bookSeeker/FindForSeeker.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { List } from \"../principalPage/List-Avatar\";\nimport { port } from \"../principalPage/Principal\";\n\nconst FindForSeeker = () => {\n  const { seek, data, id } = useParams();\n  const [list, setList] = useState([]);\n  const url = `http://localhost:${port}/beginning/seeker/${seek}`;\n\n  const link = (idBook) => `/principal/category/0/seeker/book/${idBook}`;\n\n  useEffect(() => {\n    const dataPost = {};\n    dataPost[seek] = data;\n    const fetcher = async () => {\n      const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(dataPost),\n      });\n      if (res.status !== 200) {\n        console.warn(\"error\", res);\n      }\n      const body = await res.json();\n      setList(body);\n    };\n    fetcher();\n  }, [url, seek, data]);\n\n  return (\n    <div>\n      <Link to=\"/principal\">Principal</Link>\n\n      {list.length > 0 ? (\n        <List array={list} link={link}></List>\n      ) : (\n        <p>No hay libros</p>\n      )}\n    </div>\n  );\n};\n\nexport { FindForSeeker };\n","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/Valorations.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/ProfileInside.js",["124"],"import React, { useState } from \"react\";\nimport { port } from \"../principalPage/Principal\";\nimport { Link } from \"react-router-dom\";\nimport { useFetchAuth } from \"../useFetch/useFetchAuth\";\n\nconst ProfileUserInside = ({ auth }) => {\n  const [dataUser] = useFetchAuth(\n    `http://localhost:${port}/login/user/profile`,\n    auth\n  );\n\n  const showProfile = dataUser.map((e) => {\n    const url = `http://localhost:${port}/uploads/${e.photo}`;\n    return (\n      <div key={e.id_user}>\n        <nav>\n          <Link to=\"/principal\">Principal </Link>\n          <Link to=\"/principal/profile/edit\">Editar</Link>\n        </nav>\n\n        <img src={url} alt=\"avatar\" style={{ maxWidth: 80 }}></img>\n        <p>{e.username}</p>\n        <p>{e.descriptionUser}</p>\n        <p>{e.postalCode}</p>\n        <nav>\n          <Link to=\"/principal/profile/list/favorites\">Favoritos</Link>\n          <Link to=\"/principal/profile/list/offers\">Notificaciones</Link>\n          <Link to=\"/principal/profile/list/purchase\">Comprados</Link>\n          <Link to=\"/principal/profile/list/toSell\">En venta</Link>\n          <Link to=\"/principal/profile/list/reserved\">Reservados</Link>\n        </nav>\n      </div>\n    );\n  });\n  return showProfile;\n};\n\nexport { ProfileUserInside };\n","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/profile/ListBooksUser.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/buttons/ViewBooksFor.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/FormBook/FormBook.js",["125","126"],"import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { port } from \"../principalPage/Principal\";\nimport { useFetchData } from \"../useFetch/useFetchData\";\n\nconst FormEditBook = ({ auth }) => {\n  const { idBook } = useParams();\n  const [book] = useFetchData(\n    `http://localhost:${port}/beginning/category/${idBook}`\n  );\n\n  let [imgOne, setImgOne] = useState(null);\n  let [imgTwo, setImgTwo] = useState(null);\n  let [title, setTitle] = useState(\"\");\n  let [author, setAuthor] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  let [category, setCategory] = useState(\"\");\n  let [price, setPrice] = useState(0);\n  let [language, setLanguage] = useState(\"\");\n\n  const [onImgOne, setOnImgOne] = useState(false);\n  const [onImgTwo, setOnImgTwo] = useState(false);\n  const [onTitle, setOnTitle] = useState(false);\n  const [onAuthor, setOnAuthor] = useState(false);\n  const [onDescription, setOnDescription] = useState(false);\n  const [onCategory, setOnCategory] = useState(false);\n  const [onPrice, setOnPrice] = useState(false);\n  const [onLanguage, setOnLanguage] = useState(false);\n\n  const history = useHistory();\n  const edit = book.map((e) => {\n    const handlSubmit = async (event) => {\n      event.preventDefault();\n\n      if (!title) {\n        title = e.productName;\n      }\n      if (!author) {\n        author = e.author;\n      }\n      if (!description) {\n        description = e.descriptionProduct;\n      }\n      if (!category) {\n        category = e.category;\n      }\n      if (!price) {\n        price = e.price;\n      }\n      if (!language) {\n        language = e.bookLanguage;\n      }\n      await saveBook({\n        imgOne,\n        imgTwo,\n        title,\n        author,\n        description,\n        category,\n        price,\n        language,\n        auth,\n        idBook,\n        e,\n      });\n      history.push(`/principal/profile/list/toSell/book/${idBook}`);\n    };\n\n    return (\n      <div key={e.id_product}>\n        <form onSubmit={handlSubmit}>\n          <div>\n            <label htmlFor=\"imgOne\"></label>\n            <input\n              id=\"imgOne\"\n              type=\"file\"\n              onChange={(element) => [\n                setOnImgOne(true),\n                setImgOne(element.target.files[0]),\n              ]}\n              accept=\"image/*\"\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"imgTwo\"></label>\n            <input\n              id=\"imgTwo\"\n              type=\"file\"\n              onChange={(element) => [\n                setOnImgTwo(true),\n                setImgTwo(element.target.files[0]),\n              ]}\n              accept=\"image/*\"\n            ></input>\n          </div>\n\n          <div>\n            <label htmlFor=\"title\"></label>\n            <input\n              id=\"title\"\n              value={onTitle ? title : e.productName}\n              type=\"text\"\n              placeholder=\"titulo\"\n              onChange={(element) => [\n                setOnTitle(true),\n                setTitle(element.target.value),\n              ]}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"author\"></label>\n            <input\n              id=\"author\"\n              value={onAuthor ? author : e.author}\n              type=\"text\"\n              placeholder=\"titulo\"\n              onChange={(element) => [\n                setOnAuthor(true),\n                setAuthor(element.target.value),\n              ]}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"description\"></label>\n            <input\n              id=\"description\"\n              value={onDescription ? description : e.descriptionProduct}\n              type=\"text\"\n              placeholder=\"descripción\"\n              onChange={(element) => [\n                setOnDescription(true),\n                setDescription(element.target.value),\n              ]}\n              required\n            ></input>\n          </div>\n\n          <div>\n            <label htmlFor=\"price\"></label>\n            <input\n              id=\"price\"\n              value={onPrice ? price : e.price}\n              type=\"number\"\n              placeholder=\"precio\"\n              onChange={(element) => [\n                setOnPrice(true),\n                setPrice(element.target.value),\n              ]}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"language\"></label>\n            <input\n              id=\"language\"\n              value={onLanguage ? language : e.bookLanguage}\n              type=\"text\"\n              placeholder=\"idioma\"\n              onChange={(element) => [\n                setOnLanguage(true),\n                setLanguage(element.target.value),\n              ]}\n              required\n            ></input>\n          </div>\n          <div>\n            <SelectCategories\n              id={onCategory ? category : e.category}\n              setId={setCategory}\n              on={onCategory}\n              setOn={setOnCategory}\n            ></SelectCategories>\n          </div>\n          <input type=\"submit\" value=\"submit\"></input>\n        </form>\n        <button onClick={() => history.push(\"/principal\")}>Cancelar</button>\n      </div>\n    );\n  });\n  return edit;\n};\n\nconst SelectCategories = ({ id, setId, setOn, on }) => {\n  const [data] = useFetchData(`http://localhost:${port}/beginning/categories`);\n\n  const listCategories = data.map((e) => {\n    return (\n      <option key={e.id_category} value={e.id_category}>\n        {e.category_name}\n      </option>\n    );\n  });\n  return (\n    <select\n      onChange={(e) => [setOn(true), setId(e.target.value)]}\n      value={id}\n      required\n    >\n      {listCategories}\n    </select>\n  );\n};\n\nasync function saveBook({\n  imgOne = undefined,\n  imgTwo = undefined,\n  title,\n  author,\n  description,\n  category,\n  price,\n  language,\n  auth,\n  idBook,\n  e,\n}) {\n  const formData = new FormData();\n\n  if (imgOne) {\n    formData.append(\"change\", imgOne, imgOne.name);\n  } else {\n    formData.append(\"change\", e.photoFront);\n  }\n  if (imgTwo) {\n    formData.append(\"change\", imgTwo, imgTwo.name);\n  } else {\n    formData.append(\"change\", e.photoBack);\n  }\n\n  formData.append(\"productName\", title);\n  formData.append(\"author\", author);\n  formData.append(\"category\", category);\n  formData.append(\"price\", price);\n  formData.append(\"bookLanguage\", language);\n  formData.append(\"descriptionProduct\", description);\n\n  const res = await fetch(\n    `http://localhost:${port}/login/user/book/${idBook}/editBook`,\n    {\n      method: \"PUT\",\n      headers: {\n        Authorization: auth,\n      },\n      body: formData,\n    }\n  );\n  if (res.status > 300) {\n    console.warn(\"error\", res);\n  }\n  return res.status === 200;\n}\n\nexport { FormEditBook };\n","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/FormBook/FormCreatebook.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/signin-login/Signin.js",["127"],"import React, { useState } from \"react\";\nimport { port } from \"../principalPage/Principal\";\nimport { UserFormSignIn } from \"./UseForm\";\nimport { Link, Route, useHistory } from \"react-router-dom\";\nimport \"../../css/style.css\";\n\nconst SignIn = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n  const handlSubmit = async (e) => {\n    e.preventDefault();\n\n    const res = await fetch(`http://localhost:${port}/signin`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ username, email, password }),\n    });\n    const body = await res.json();\n    if (res.status !== 200) {\n      console.warn(res.status);\n      setError(body.error);\n    } else {\n      return history.push(\"/login\");\n    }\n  };\n  return (\n    <div className=\"register\">\n      <div>Register</div>\n      <UserFormSignIn\n        handlSubmit={handlSubmit}\n        username={username}\n        setUsername={setUsername}\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        err={error}\n      ></UserFormSignIn>\n      <Link to=\"/login\">Iniciar sesión</Link>\n    </div>\n  );\n};\n\nexport { SignIn };\n","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/signin-login/Login.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/changePassword/changePassword.js",["128","129","130"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { port } from \"../principalPage/Principal\";\nimport { UserFormChangePassword } from \"../signin-login/UseForm\";\nimport \"../../css/style.css\";\n\nconst NewPassword = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\n  const handlSubmit = async (e) => {\n    e.preventDefault();\n\n    const res = await fetch(`http://localhost:${port}/changePassword`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ newPassword, passwordAgain }),\n    });\n  };\n  return (\n    <div className=\"changePassword\">\n      <div>Cambiar Contraseña</div>\n      <UserFormChangePassword\n        handlSubmit={handlSubmit}\n        newPassword={newPassword}\n        setNewPassword={setNewPassword}\n        passwordAgain={passwordAgain}\n        setPasswordAgain={setPasswordAgain}\n      ></UserFormChangePassword>\n      <Link to=\"/Login\">Iniciar sesion</Link>\n    </div>\n  );\n};\n\nexport { NewPassword };\n","/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/useFetch/useFetchData.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/useFetch/useFetchAuth.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/buttons/Buttons.js",["131","132"],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/buttons/FormValoration.js",["133","134","135","136"],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/signin-login/UseForm.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/categories/Categories.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/headPrincipal/HeadPrincipal.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/lastBooks/LastBooks.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/principalPage/List-Avatar.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/navPrincipal/NavPrincipal.js",[],"/home/jey/dev/hackaboss/proyecto/proyecto-recy-book/Proyecto-HackaBoss/app/src/components/CreateProfile/CreateProfile.js",["137"],"import React, { useState } from \"react\";\nimport { port } from \"../principalPage/Principal\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useFetchAuth } from \"../useFetch/useFetchAuth\";\n\nconst CreateProfile = ({ auth }) => {\n  const [dataUser] = useFetchAuth(\n    `http://localhost:${port}/login/user/profile`,\n    auth\n  );\n  let [img, setImg] = useState(null);\n  let [name, setName] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  let [city, setCity] = useState(\"\");\n  let [cp, setCp] = useState(\"\");\n  const [onImg, setOnImg] = useState(false);\n  const [onName, setOnName] = useState(false);\n  const [onDescription, setOnDescription] = useState(false);\n  const [onCity, setOnCity] = useState(false);\n  const [onCp, setOnCp] = useState(false);\n  const history = useHistory();\n  const newUser = dataUser.map((user) => {\n    const handlSubmit = async (e) => {\n      e.preventDefault();\n      if (!name) {\n        name = user.username;\n      }\n      if (!description) {\n        description = user.descriptionUser;\n      }\n      if (!city) {\n        city = user.city;\n      }\n      if (!cp) {\n        cp = user.postalCode;\n      }\n\n      await saveUser({\n        img,\n        user,\n        name,\n        description,\n        city,\n        cp,\n        auth,\n      });\n      history.push(\"/principal/profile\");\n    };\n\n    return (\n      <div key={user.id_user}>\n        <form onSubmit={handlSubmit}>\n          <div>\n            <nav>\n              <Link to=\"/principal\">Principal ˃ </Link>\n              <Link to=\"/principal/profile\">Perfil</Link>\n            </nav>\n            <label htmlFor=\"userImage\"></label>\n            <input\n              id=\"userImage\"\n              type=\"file\"\n              onChange={(e) => [setOnImg(true), setImg(e.target.files[0])]}\n              accept=\"image/*\"\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"name\"></label>\n            <input\n              id=\"name\"\n              value={onName ? name : user.username}\n              type=\"text\"\n              placeholder=\"nombre\"\n              onChange={(e) => [setOnName(true), setName(e.target.value)]}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"description\"></label>\n            <input\n              id=\"description\"\n              value={onDescription ? description : user.descriptionUser}\n              type=\"text\"\n              placeholder=\"descripción\"\n              onChange={(e) => [\n                setOnDescription(true),\n                setDescription(e.target.value),\n              ]}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"city\"></label>\n            <input\n              id=\"city\"\n              value={onCity ? city : user.city}\n              type=\"text\"\n              placeholder=\"ciudad\"\n              onChange={(e) => [setOnCity(true), setCity(e.target.value)]}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"cp\"></label>\n            <input\n              id=\"cp\"\n              value={onCp ? cp : user.postalCode}\n              type=\"number\"\n              placeholder=\"codigo postal\"\n              onChange={(e) => [setOnCp(true), setCp(e.target.value)]}\n              required\n            ></input>\n          </div>\n\n          <input type=\"submit\" value=\"submit\"></input>\n        </form>\n        <button onClick={() => history.push(\"/principal/profile\")}>\n          Cancelar\n        </button>\n      </div>\n    );\n  });\n  return newUser;\n};\n\nasync function saveUser({\n  img = undefined,\n  user,\n  name,\n  description,\n  city,\n  cp,\n  auth,\n}) {\n  const formData = new FormData();\n  if (img) {\n    formData.append(\"photo\", img, img.name);\n  } else {\n    formData.append(\"photo\", user.photo);\n  }\n  formData.append(\"username\", name);\n  formData.append(\"descriptionUser\", description);\n  formData.append(\"city\", city);\n  formData.append(\"postalCode\", cp);\n  const res = await fetch(`http://localhost:${port}/user/editUser`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: auth,\n    },\n    body: formData,\n  });\n  if (res.status > 300) {\n    console.warn(\"error\", res);\n  }\n  return res.status === 200;\n}\n\nexport { CreateProfile };\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":3,"nodeType":"144","messageId":"145","endLine":6,"endColumn":7},{"ruleId":"142","severity":1,"message":"146","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"147","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":22},{"ruleId":"142","severity":1,"message":"148","line":7,"column":23,"nodeType":"144","messageId":"145","endLine":7,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"149","line":21,"column":10,"nodeType":"144","messageId":"145","endLine":21,"endColumn":18},{"ruleId":"142","severity":1,"message":"150","line":22,"column":10,"nodeType":"144","messageId":"145","endLine":22,"endColumn":18},{"ruleId":"142","severity":1,"message":"151","line":4,"column":16,"nodeType":"144","messageId":"145","endLine":4,"endColumn":21},{"ruleId":"142","severity":1,"message":"152","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":33},{"ruleId":"142","severity":1,"message":"151","line":2,"column":35,"nodeType":"144","messageId":"145","endLine":2,"endColumn":40},{"ruleId":"142","severity":1,"message":"153","line":13,"column":11,"nodeType":"144","messageId":"145","endLine":13,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"154","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"155","line":10,"column":10,"nodeType":"144","messageId":"145","endLine":10,"endColumn":16},{"ruleId":"142","severity":1,"message":"156","line":10,"column":18,"nodeType":"144","messageId":"145","endLine":10,"endColumn":27},{"ruleId":"142","severity":1,"message":"157","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":16},{"ruleId":"142","severity":1,"message":"158","line":11,"column":18,"nodeType":"144","messageId":"145","endLine":11,"endColumn":27},{"ruleId":"142","severity":1,"message":"159","line":16,"column":10,"nodeType":"144","messageId":"145","endLine":16,"endColumn":15},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useFetchAuth' is defined but never used.","'id' is assigned a value but never used.","'onImgOne' is assigned a value but never used.","'onImgTwo' is assigned a value but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'res' is assigned a value but never used.","'Redirect' is defined but never used.","'onText' is assigned a value but never used.","'setOntext' is assigned a value but never used.","'onStar' is assigned a value but never used.","'setOnstar' is assigned a value but never used.","'onImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]